/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/scala_plugin.html
 */

plugins {
    // Apply the scala plugin to add support for Scala.
    id 'scala'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Apply the gradle publishing tooling
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'maven-publish'
}

project.version = '0.0.1'


def scalaSuffix = '_2.12'
def group = 'io.openlaw.protos'
project.group = group

repositories {
    // Use jcenter and mavenCentral for resolving dependencies.
    jcenter()
    mavenCentral()
}

jar {
    archiveBaseName = project.name + scalaSuffix
    manifest {
        attributes("Implementation-Version": "$version")
    }
}

// Library Dependencies
dependencies {
    // Use the Scala version defined in the scala-builder at https://github.com/openlawteam/scala-builder/blob/master/Dockerfile#L10
    compile 'org.scala-lang:scala-library:2.12.11'

    // Use protobuf compiler to compile scala generated classes
    compile 'com.github.os72:protoc-jar:3.8.0'
    // Use the ScalaPB plugin to be able to compile the generated Scala classes because they have base types based on scalapb API
    compile 'com.thesamet.scalapb:compilerplugin_2.12:0.9.4'
    compile 'com.thesamet.scalapb:scalapb-runtime-grpc_2.12:0.9.4'
    compile 'com.thesamet.scalapb:scalapb-runtime_2.12:0.9.4'
    // Use google protobuf lib to be able to compile utility types generated from google protobuf API
    compile 'com.google.protobuf:protobuf-java:3.10.0'

    // Use Scalatest for testing the generated Scala classes
    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.12:3.1.0'
    testCompile 'org.scalatestplus:junit-4-12_2.12:3.1.0.0'

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.12:1.2.0'
}

// Publishing library to Github Packages
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/openlawteam/openlaw-protos")
            credentials {
                username = project.findProperty("gpr.user") as String ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") as String ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId group
            artifactId "${project.name}$scalaSuffix"
            version project.version
            from(components.java)
        }
    }
}
